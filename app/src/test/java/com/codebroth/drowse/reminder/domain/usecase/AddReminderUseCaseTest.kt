package com.codebroth.drowse.reminder.domain.usecase

import com.codebroth.drowse.reminder.domain.model.Reminder
import com.google.common.truth.Truth.assertThat
import kotlinx.coroutines.flow.first
import kotlinx.coroutines.runBlocking
import org.junit.Before
import org.junit.Test
import java.time.DayOfWeek

class AddReminderUseCaseTest : BaseReminderTest() {

    private lateinit var addReminder: AddReminderUseCase

    private lateinit var newReminder: Reminder

    @Before
    override fun setUp() {
        super.setUp()

        addReminder = AddReminderUseCase(fakeReminderRepository)

        newReminder = Reminder(
            id = 0, // ID will be generated by the repository
            hour = 8,
            minute = 30,
            daysOfWeek = setOf(DayOfWeek.MONDAY, DayOfWeek.WEDNESDAY),
            label = "Morning Reminder"
        )
    }

    @Test
    fun `addReminder inserts a new reminder into the repository`() = runBlocking {
        val reminderId = addReminder(newReminder)

        assert(reminderId > 0) { "Reminder ID should be greater than 0" }

        val reminders = fakeReminderRepository.getAllReminders().first()
        assertThat(reminders).contains(newReminder.copy(id = reminderId))
    }
}