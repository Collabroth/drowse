package com.codebroth.drowse.alarm.domain.usecase

import com.codebroth.drowse.alarm.domain.model.Alarm
import com.google.common.truth.Truth.assertThat
import kotlinx.coroutines.flow.first
import kotlinx.coroutines.runBlocking
import org.junit.Before
import org.junit.Test
import java.time.DayOfWeek

class AddAlarmUseCaseTest : BaseAlarmTest() {

    private lateinit var addAlarm: AddAlarmUseCase

    private lateinit var newAlarm: Alarm

    @Before
    override fun setUp() {
        super.setUp()

        addAlarm = AddAlarmUseCase(fakeAlarmRepository)

        newAlarm = Alarm(
            id = 0, // ID will be generated by the repository
            hour = 8,
            minute = 30,
            isEnabled = true,
            daysOfWeek = setOf(DayOfWeek.MONDAY, DayOfWeek.WEDNESDAY),
            label = "Morning Alarm"
        )
    }

    @Test
    fun `addAlarm inserts a new alarm into the repository`() = runBlocking {

        val alarmId = addAlarm(newAlarm)

        assertThat(alarmId).isGreaterThan(0)

        val retrievedAlarm = fakeAlarmRepository.getAlarmById(alarmId).first()
        assertThat(retrievedAlarm).isEqualTo(newAlarm.copy(id = alarmId))
    }
}